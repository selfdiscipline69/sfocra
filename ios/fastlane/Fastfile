default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do |options|
    # Options
    allow_provisioning_updates = options[:allow_provisioning_updates] || false
    api_key_path = options[:api_key_path]
    use_api_key = options[:use_api_key] || false
    
    # Ensure build directory exists (Windows compatible)
    if FastlaneCore::Helper.windows?
      sh("mkdir ..\\build 2>nul || exit 0")
    else
      sh("mkdir -p ../build")
    end
    
    # Increment build number - Skip on Windows as this requires xcodebuild
    unless FastlaneCore::Helper.windows?
      increment_build_number(xcodeproj: "Sfocra.xcodeproj")
    end
    
    # Update CocoaPods dependencies - Skip on Windows as this requires macOS
    unless FastlaneCore::Helper.windows?
      cocoapods
    end
    
    # These actions will only run on CI (GitHub Actions) or macOS
    unless FastlaneCore::Helper.windows?
      if use_api_key && api_key_path
        UI.important("Using App Store Connect API key at: #{api_key_path}")
        app_store_connect_api_key(
          key_filepath: api_key_path,
          duration: 1200, # 20 minutes
          in_house: false
        )
      end
      
      # Update code signing settings - use automatic signing
      update_code_signing_settings(
        use_automatic_signing: true,
        team_id: ENV["TEAM_ID"] || CredentialsManager::AppfileConfig.try_fetch_value(:team_id),
        bundle_identifier: ENV["BUNDLE_IDENTIFIER"] || CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier),
        build_configurations: ["Release"],
        path: "Sfocra.xcodeproj"
      )
      
      # Build options
      build_options = {
        workspace: "Sfocra.xcworkspace",
        scheme: "Sfocra",
        output_directory: "build",
        output_name: "Sfocra.ipa",
        export_method: "app-store",
        clean: true,
        export_options: {
          method: "app-store",
          teamID: ENV["TEAM_ID"] || CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
        }
      }
      
      # Add extra xcodebuild arguments if needed
      if allow_provisioning_updates
        build_options[:xcargs] = "-allowProvisioningUpdates"
      end
      
      # Build the app with automatic signing
      build_app(build_options)
      
      # Upload to TestFlight
      upload_to_testflight(
        skip_waiting_for_build_processing: true,
        apple_id: CredentialsManager::AppfileConfig.try_fetch_value(:apple_id)
        # API key is automatically picked up from lane context when app_store_connect_api_key is used
      )
    else
      UI.important("Running on Windows - skipping iOS build and upload steps. These will run on CI.")
    end
  end
  
  desc "Prepare development environment"
  lane :setup do
    # Works on any platform
    UI.success("Fastlane environment is ready!")
    
    # Only on macOS
    unless FastlaneCore::Helper.windows?
      # Install certificates, profiles, etc.
      UI.success("macOS-specific setup complete")
    end
  end
end 